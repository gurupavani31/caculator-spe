pipeline {
    agent any

    triggers {
        githubPush() // Trigger the pipeline on GitHub push events
    }

    environment {
            DOCKER_IMAGE_NAME = 'calculator-spe'
            GITHUB_REPO_URL = 'https://github.com/gurupavani31/calculator-spe'
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                        git branch: 'master', url: "${GITHUB_REPO_URL}"
                }
            }
        }

        stage('Maven Build and Test') {
            steps {
                script {
                    sh 'mvn clean package'
                    sh 'mvn test'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("${DOCKER_IMAGE_NAME}", '.')
                }
            }
        }

        stage('Push Docker Images') {
            steps {
                script{
                    docker.withRegistry('', 'DockerHubCred') {
                    sh "docker tag ${DOCKER_IMAGE_NAME} gurupavani31/calculator-spe:latest"
                    sh "docker push gurupavani31/${DOCKER_IMAGE_NAME}"
                    }
                }
            }
        }
        stage('Run Ansible Playbook') {
            steps {
                script {
                    ansiblePlaybook(
                        playbook: 'deploy.yml',
                        inventory: 'inventory'
                     )
                }
            }
        }
    }

    post {
        success {
            // Send email notification on successful build
            emailext(
            attachLog: true,
            body: "Your build is successful. Docker image deployed.",
            subject: "Build Success",
            to: "jangagurupavani.mt@gmail.com"
            )
            // Remove old Docker images
            //script {
            //    docker.image("calculator-spe:latest").remove()
            //    docker.image("calculator-spe-test:latest").remove()
            //}
        }
        failure {
            // Send email notification on build failure
            emailext (
            attachLog: true,
            body: "Your build has failed. Please check the Jenkins console output for details.",
            subject: "Build Failure",
            to: "jangagurupavani.mt@gmail.com"
            )
        }
    }
}
